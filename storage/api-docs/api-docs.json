{
    "openapi": "3.0.0",
    "info": {
        "title": "My Doc API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1": {},
        "/api/v1/albums": {
            "get": {
                "tags": [
                    "Album"
                ],
                "summary": "List of all albums",
                "operationId": "41ea9697bc8de8eefcba48dd41725e83",
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "userId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Some album title"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Albums not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Album"
                ],
                "summary": "Create a new album",
                "operationId": "6764410c07a5baa6ace8a40f8694734b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Some title"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Album created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Some title"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "userId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{album}": {
            "get": {
                "tags": [
                    "Album"
                ],
                "summary": "Show a specific album",
                "operationId": "df35934e766cebb8f1d4f6944f774bea",
                "parameters": [
                    {
                        "name": "album",
                        "in": "path",
                        "description": "Album's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Some title"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Album not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Album not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Album"
                ],
                "summary": "Update a specific album",
                "operationId": "f3261fe2783d7e912c1000915cc588de",
                "parameters": [
                    {
                        "name": "album",
                        "in": "path",
                        "description": "Album's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Title updated"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Album updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Title updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "userId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Album"
                ],
                "summary": "Delete a specific album",
                "operationId": "d41d07e20d849fae35e682e91b1cdbed",
                "parameters": [
                    {
                        "name": "album",
                        "in": "path",
                        "description": "Album's id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted album with id 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Album not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Album not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "List of all comments",
                "operationId": "6f6135f69be6fdcf9f2d5a662982c107",
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "postId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Lorem ipsum"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "example@email.com"
                                            },
                                            "body": {
                                                "type": "string",
                                                "example": "Blanditiis corporis dolore dolorem eaque fuga"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Create a new comment",
                "operationId": "893295f958c5d7af0be6146162c74990",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "postId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 501
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "New comment"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "newexample@email.com"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "New post"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "postId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 501
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New comment"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "newexample@email.com"
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "New post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "postId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The postId field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "body": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The body field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comments/{comment}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Show a specific comment",
                "operationId": "bb1f108eef9515d0d7749f362aa04e76",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "Comment's id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "postId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New comment"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "newexample@email.com"
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "New post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found or something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comments/{id}": {
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a specific comment",
                "operationId": "6867492787de7ddfdd8b49a22c2ef812",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Data for updating the comment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "postId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated comment"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "updatedemail@email.com"
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "Updated body"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "postId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated comment"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "updatedemail@email.com"
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "Updated body"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "postId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The postId field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "body": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The body field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found or something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a specific comment",
                "operationId": "7e390b1b17dd390da4150c4fd21bfa78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted comment with id 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/comments/post/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "List comments for a specific post",
                "operationId": "e63a41e7c51eb24babe334b6b77dd8f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to fetch comments for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of comments for the specified post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "postId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Lorem ipsum"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "example@email.com"
                                            },
                                            "body": {
                                                "type": "string",
                                                "example": "Blanditiis corporis dolore dolorem eaque fuga"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/photos": {
            "get": {
                "tags": [
                    "Photo"
                ],
                "summary": "List of all photos",
                "operationId": "a434e3a602448e93510287eb8c34d1c4",
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "albumId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Sample photo title"
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "https://via.placeholder.com/600/92c952"
                                            },
                                            "thumbnailUrl": {
                                                "type": "string",
                                                "example": "https://via.placeholder.com/150/92c952"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Photo"
                ],
                "summary": "Create a new photo",
                "operationId": "dd7b6f98fc8d3453d4d49d9cf8acebdd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "albumId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Some title"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://via.placeholder.com/600/92c952"
                                    },
                                    "thumbnailUrl": {
                                        "type": "string",
                                        "example": "https://via.placeholder.com/150/92c952"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Photo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "albumId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Some title"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://via.placeholder.com/600/92c952"
                                        },
                                        "thumbnailUrl": {
                                            "type": "string",
                                            "example": "https://via.placeholder.com/150/92c952"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "albumId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The albumId field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "url": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The url field is required."
                                                    }
                                                },
                                                "thumbnailUrl": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The thumbnail url field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong or resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{photo}": {
            "get": {
                "tags": [
                    "Photo"
                ],
                "summary": "Show a specific photo",
                "operationId": "69d2e1d7ed47cf3f87298841ff8010f0",
                "parameters": [
                    {
                        "name": "photo",
                        "in": "path",
                        "description": "Photo's id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "albumId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Sample photo title"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://via.placeholder.com/600/92c952"
                                        },
                                        "thumbnailUrl": {
                                            "type": "string",
                                            "example": "https://via.placeholder.com/150/92c952"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Photo not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/photos/{id}": {
            "put": {
                "tags": [
                    "Photo"
                ],
                "summary": "Update a specific photo",
                "operationId": "533ce5bc44c474e69c67c3d9bcb53e74",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Photo's id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "albumId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Updated photo title"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com/updated-photo.jpg"
                                    },
                                    "thumbnailUrl": {
                                        "type": "string",
                                        "example": "https://example.com/updated-thumbnail.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Photo updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "albumId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 101
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Updated photo title"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://example.com/updated-photo.jpg"
                                        },
                                        "thumbnailUrl": {
                                            "type": "string",
                                            "example": "https://example.com/updated-thumbnail.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "albumId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The albumId field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "url": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The url field is required."
                                                    }
                                                },
                                                "thumbnailUrl": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The thumbnail url field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found or something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Photo"
                ],
                "summary": "Delete a specific photo",
                "operationId": "2a3a1813c02d3ad7a8ad6ea107a750d0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Photo's id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted photo with id 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo not found or something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "List of all posts",
                "operationId": "835a0dc7ffa5982d69e694d88821e88d",
                "responses": {
                    "200": {
                        "description": "List of all posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "userId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Some title"
                                            },
                                            "body": {
                                                "type": "string",
                                                "example": "Lorem ipsum dolor sit amet."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create a post",
                "operationId": "83abd839a7981a38ddae68c2902ab796",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "userId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Some title"
                                            },
                                            "body": {
                                                "type": "string",
                                                "example": "Lorem ipsum dolor sit amet."
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 101
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Some title"
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "Lorem ipsum dolor sit amet."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "userId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "body": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The body field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{post}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Show a specific post",
                "operationId": "84ec5d2d43e287c1e8e72ba8ab1a8770",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post's id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Some title"
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "Lorem ipsum dolor sit amet."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Update a specific post",
                "operationId": "f80ac24725e45d3326c05d97587d2316",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post's id",
                        "required": true,
                        "example": 1
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "properties": {
                                            "userId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Updated title"
                                            },
                                            "body": {
                                                "type": "string",
                                                "example": "Updated body content."
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 101
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Updated title"
                                        },
                                        "body": {
                                            "type": "string",
                                            "example": "Updated body content."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "userId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "body": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The body field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete a specific post",
                "operationId": "9205c6e183db9bb0e855aa720c7266a3",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "Post's id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted post with id 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/quantity/{quantity}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Display a specific number of posts",
                "operationId": "fa1343b5ec3af3486d67456a9cff6f63",
                "parameters": [
                    {
                        "name": "quantity",
                        "in": "path",
                        "description": "Quantity of posts",
                        "required": true,
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Showing 3 posts"
                                        },
                                        "posts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "userId": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "nesciunt quas odio"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "example": "repudiandae veniam quaerat sunt sed alias aut fugiat sit autem sed est voluptatem omnis possimus esse voluptatibus quis est aut tenetur dolor neque"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/keyword/{keyword}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Search posts by text in post's body",
                "operationId": "2c7eba5a6e115574bad5d1f307187c7e",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "Text by which the post will be found",
                        "required": true,
                        "example": "alias"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Found posts matching the title 'qui est esse'"
                                        },
                                        "posts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "userId": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 6
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "nesciunt quas odio"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "example": "repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No posts found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/todos": {
            "get": {
                "tags": [
                    "Todo"
                ],
                "summary": "List of all todos",
                "operationId": "e238d841939c96f76d32aa8df005b888",
                "responses": {
                    "200": {
                        "description": "List of all todos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "userId": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Sample Todo"
                                            },
                                            "completed": {
                                                "type": "boolean",
                                                "example": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Todo"
                ],
                "summary": "Create a new todo",
                "operationId": "64e019f7af4a9d756c47533f991c63c4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 201
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "New Todo"
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Todo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "New Todo"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "userId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "completed": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The completed field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/todos/{id}": {
            "get": {
                "tags": [
                    "Todo"
                ],
                "summary": "Show a specific todo",
                "operationId": "b7c680bd3d41d36f2d7cff2702734091",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Todo's id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Sample Todo"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Todo not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Todo"
                ],
                "summary": "Update a specific todo",
                "operationId": "034d90a773a55780d448cd4bd0f7d490",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Todo's id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Todo"
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Todo updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userId": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Updated Todo"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "userId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The user id field is required."
                                                    }
                                                },
                                                "id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The id field is required."
                                                    }
                                                },
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "completed": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The completed field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Todo"
                ],
                "summary": "Delete a specific todo",
                "operationId": "e533443e104e46cf45c6f7bc507fc475",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the todo to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted todo with id 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "List of all users",
                "operationId": "275771c05d6279d3b35265e60b2effcc",
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Leanne Graham"
                                            },
                                            "username": {
                                                "type": "string",
                                                "example": "Bret"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "Sincere@april.biz"
                                            },
                                            "address": {
                                                "properties": {
                                                    "street": {
                                                        "type": "string",
                                                        "example": "Kulas Light"
                                                    },
                                                    "suite": {
                                                        "type": "string",
                                                        "example": "Apt. 556"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Gwenborough"
                                                    },
                                                    "zipcode": {
                                                        "type": "string",
                                                        "example": "92998-3874"
                                                    },
                                                    "geo": {
                                                        "properties": {
                                                            "lat": {
                                                                "type": "string",
                                                                "example": "-37.3159"
                                                            },
                                                            "lng": {
                                                                "type": "string",
                                                                "example": "81.1496"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "1-770-736-8031 x56442"
                                            },
                                            "website": {
                                                "type": "string",
                                                "example": "hildegard.org"
                                            },
                                            "company": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Romaguera-Crona"
                                                    },
                                                    "catchPhrase": {
                                                        "type": "string",
                                                        "example": "Multi-layered client-server neural-net"
                                                    },
                                                    "bs": {
                                                        "type": "string",
                                                        "example": "harness real-time e-markets"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "d23b37213cfdf246b1d745b8949867e9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Leanne Graham"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Bret"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "Sincere@april.biz"
                                    },
                                    "address": {
                                        "properties": {
                                            "street": {
                                                "type": "string",
                                                "example": "Kulas Light"
                                            },
                                            "suite": {
                                                "type": "string",
                                                "example": "Apt. 556"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Gwenborough"
                                            },
                                            "zipcode": {
                                                "type": "string",
                                                "example": "92998-3874"
                                            },
                                            "geo": {
                                                "properties": {
                                                    "lat": {
                                                        "type": "string",
                                                        "example": "-37.3159"
                                                    },
                                                    "lng": {
                                                        "type": "string",
                                                        "example": "81.1496"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1-770-736-8031 x56442"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "hildegard.org"
                                    },
                                    "company": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Romaguera-Crona"
                                            },
                                            "catchPhrase": {
                                                "type": "string",
                                                "example": "Multi-layered client-server neural-net"
                                            },
                                            "bs": {
                                                "type": "string",
                                                "example": "harness real-time e-markets"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 11
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Leanne Graham"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "Bret"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "Sincere@april.biz"
                                        },
                                        "address": {
                                            "properties": {
                                                "street": {
                                                    "type": "string",
                                                    "example": "Kulas Light"
                                                },
                                                "suite": {
                                                    "type": "string",
                                                    "example": "Apt. 556"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Gwenborough"
                                                },
                                                "zipcode": {
                                                    "type": "string",
                                                    "example": "92998-3874"
                                                },
                                                "geo": {
                                                    "properties": {
                                                        "lat": {
                                                            "type": "string",
                                                            "example": "-37.3159"
                                                        },
                                                        "lng": {
                                                            "type": "string",
                                                            "example": "81.1496"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "1-770-736-8031 x56442"
                                        },
                                        "website": {
                                            "type": "string",
                                            "example": "hildegard.org"
                                        },
                                        "company": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Romaguera-Crona"
                                                },
                                                "catchPhrase": {
                                                    "type": "string",
                                                    "example": "Multi-layered client-server neural-net"
                                                },
                                                "bs": {
                                                    "type": "string",
                                                    "example": "harness real-time e-markets"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The username field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address field is required."
                                                    }
                                                },
                                                "address.street": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.street field is required."
                                                    }
                                                },
                                                "address.suite": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.suite field is required."
                                                    }
                                                },
                                                "address.city": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.city field is required."
                                                    }
                                                },
                                                "address.zipcode": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.zipcode field is required."
                                                    }
                                                },
                                                "address.geo": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.geo field is required."
                                                    }
                                                },
                                                "address.geo.lat": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.geo.lat field is required."
                                                    }
                                                },
                                                "address.geo.lng": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.geo.lng field is required."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                },
                                                "website": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The website field is required."
                                                    }
                                                },
                                                "company": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company field is required."
                                                    }
                                                },
                                                "company.name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company.name field is required."
                                                    }
                                                },
                                                "company.catchPhrase": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company.catch phrase field is required."
                                                    }
                                                },
                                                "company.bs": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company.bs field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Show a specific user",
                "operationId": "bf69b44f1116008f52f72ab3305cc3f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Leanne Graham"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "Bret"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "Sincere@april.biz"
                                        },
                                        "address": {
                                            "properties": {
                                                "street": {
                                                    "type": "string",
                                                    "example": "Kulas Light"
                                                },
                                                "suite": {
                                                    "type": "string",
                                                    "example": "Apt. 556"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Gwenborough"
                                                },
                                                "zipcode": {
                                                    "type": "string",
                                                    "example": "92998-3874"
                                                },
                                                "geo": {
                                                    "properties": {
                                                        "lat": {
                                                            "type": "string",
                                                            "example": "-37.3159"
                                                        },
                                                        "lng": {
                                                            "type": "string",
                                                            "example": "81.1496"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "1-770-736-8031 x56442"
                                        },
                                        "website": {
                                            "type": "string",
                                            "example": "hildegard.org"
                                        },
                                        "company": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Romaguera-Crona"
                                                },
                                                "catchPhrase": {
                                                    "type": "string",
                                                    "example": "Multi-layered client-server neural-net"
                                                },
                                                "bs": {
                                                    "type": "string",
                                                    "example": "harness real-time e-markets"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a specific user",
                "operationId": "97e4efe2cdfe2332f5f8d4b6f7b44fac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Leanne Graham"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Bret"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "Sincere@april.biz"
                                    },
                                    "address": {
                                        "properties": {
                                            "street": {
                                                "type": "string",
                                                "example": "Kulas Light"
                                            },
                                            "suite": {
                                                "type": "string",
                                                "example": "Apt. 556"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Gwenborough"
                                            },
                                            "zipcode": {
                                                "type": "string",
                                                "example": "92998-3874"
                                            },
                                            "geo": {
                                                "properties": {
                                                    "lat": {
                                                        "type": "string",
                                                        "example": "-37.3159"
                                                    },
                                                    "lng": {
                                                        "type": "string",
                                                        "example": "81.1496"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1-770-736-8031 x56442"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "hildegard.org"
                                    },
                                    "company": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Romaguera-Crona"
                                            },
                                            "catchPhrase": {
                                                "type": "string",
                                                "example": "Multi-layered client-server neural-net"
                                            },
                                            "bs": {
                                                "type": "string",
                                                "example": "harness real-time e-markets"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Leanne Graham"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "Bret"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "Sincere@april.biz"
                                        },
                                        "address": {
                                            "properties": {
                                                "street": {
                                                    "type": "string",
                                                    "example": "Kulas Light"
                                                },
                                                "suite": {
                                                    "type": "string",
                                                    "example": "Apt. 556"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Gwenborough"
                                                },
                                                "zipcode": {
                                                    "type": "string",
                                                    "example": "92998-3874"
                                                },
                                                "geo": {
                                                    "properties": {
                                                        "lat": {
                                                            "type": "string",
                                                            "example": "-37.3159"
                                                        },
                                                        "lng": {
                                                            "type": "string",
                                                            "example": "81.1496"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "1-770-736-8031 x56442"
                                        },
                                        "website": {
                                            "type": "string",
                                            "example": "hildegard.org"
                                        },
                                        "company": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Romaguera-Crona"
                                                },
                                                "catchPhrase": {
                                                    "type": "string",
                                                    "example": "Multi-layered client-server neural-net"
                                                },
                                                "bs": {
                                                    "type": "string",
                                                    "example": "harness real-time e-markets"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "status code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "Validation error(s)": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The username field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field must be a valid email address."
                                                    }
                                                },
                                                "address.street": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.street field is required."
                                                    }
                                                },
                                                "address.geo.lat": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The address.geo.lat field is required."
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The phone field is required."
                                                    }
                                                },
                                                "website": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The website field is required."
                                                    }
                                                },
                                                "company.name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company.name field is required."
                                                    }
                                                },
                                                "company.catchPhrase": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company.catchPhrase field is required."
                                                    }
                                                },
                                                "company.bs": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The company.bs field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a specific user",
                "operationId": "c3d9077b4fed97e382cc7838483e8c14",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted user with id 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Album",
            "description": "Album"
        },
        {
            "name": "Comment",
            "description": "Comment"
        },
        {
            "name": "Photo",
            "description": "Photo"
        },
        {
            "name": "Post",
            "description": "Post"
        },
        {
            "name": "Todo",
            "description": "Todo"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}